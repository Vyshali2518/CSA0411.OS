#include <stdio.h>

int main() {
    int n, m, i, j, k, alloc[10][10], max[10][10], avail[10];
    int finish[10], safeSeq[10], need[10][10], count = 0;

    printf("Enter no. of processes and resources: ");
    scanf("%d %d", &n, &m);

    printf("Enter allocation matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &alloc[i][j]);

    printf("Enter max matrix:\n");
    for (i = 0; i < n; i++)
        for (j = 0; j < m; j++)
            scanf("%d", &max[i][j]);

    printf("Enter available resources: ");
    for (j = 0; j < m; j++)
        scanf("%d", &avail[j]);

    for (i = 0; i < n; i++) {
        finish[i] = 0;
        for (j = 0; j < m; j++)
            need[i][j] = max[i][j] - alloc[i][j];
    }

    while (count < n) {
        int found = 0;
        for (i = 0; i < n; i++) {
            if (finish[i] == 0) {
                int flag = 1;
                for (j = 0; j < m; j++)
                    if (need[i][j] > avail[j]) flag = 0;
                if (flag) {
                    for (k = 0; k < m; k++)
                        avail[k] += alloc[i][k];
                    safeSeq[count++] = i;
                    finish[i] = 1;
                    found = 1;
                }
            }
        }
        if (!found) break;
    }

    if (count < n)
        printf("System is not in a safe state\n");
    else {
        printf("Safe sequence: ");
        for (i = 0; i < n; i++) printf("P%d ", safeSeq[i]);
    }
    return 0;
}
